% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heatPCA.R, R/lmmatrix.R
\name{lmmatrix}
\alias{lmmatrix}
\alias{lmmatrix}
\title{Create a heatmap of association between PCs and clinical variables}
\usage{
lmmatrix(dep, ind, metric = "Rsquared")

lmmatrix(dep, ind, metric = "Rsquared")
}
\arguments{
\item{dep}{A p x n matrix of dependent variables, where p are the variables
and n are observations or samples.}

\item{ind}{A n x m dataframe, where m columns are the number of covariates
to be tested for association with the dependent variables}

\item{metric}{Defaults to 'Rsquared'. 'P-value' not implemented yet.}

\item{pc_matrix}{A p x n dataframe of pc-rotated data, where p are the PC
scores (rotated values), and n are samples. This}

\item{pDat}{A n x m dataframe, where m columns are the number of covariates
to be tested for association with the PCs.}

\item{returnMat}{A logical indicating if a dataframe of association values
should be returned}

\item{metric}{Can be 'Rsquared' or 'Pvalue'. Determines contents of output
matrix}
}
\value{
A dataframe of association values between PCs and each meta variable

A p x m matrix of pvalues or rsquared values.
}
\description{
\code{heatPCA} tests association between principal components calculated on
gene expression or DNAm data and clinical variables, the plots these on a
heatmap.

\code{heatPCA} tests association between independent variables and dependent
variables through simple linear regression (1 predictor variable)
}
\details{
Each PC supplied (I recommend only doing the top 10-20 for
readability) is tested for their correlation / association with each PC by
computing a linear model between each PC (dependent variable) and each
meta variable (dependent variable). The results are then plotted using
pheatmap::pheatmap and RColorBrewer.
##TODO:: implement % variance explained.
##TODO:: implement return p-values

Each independent variable is tested for their association with each
dependent variable in simple linear regression, and a pvalue or rsquared is
extracted and returned as a matrix.
}
\examples{
library(minfiData)
data(RGsetEx)
betas <- na.omit(getBeta(RGsetEx))
pDat <- pData(RGsetEx)
pc_obj <- prcomp(t(betas))
pc_matrix <- pc_obj$x
cov <- pDat[,c('Sample_Group', 'age', 'sex', 'status')]

## to calculate PC association with covariates

library(minfiData)
data(RGsetEx)
betas <- na.omit(getBeta(RGsetEx))
pDat <- pData(RGsetEx)
pc_obj <- prcomp(t(betas))
pc_matrix <- pc_obj$x

lmmatrix(dep = pc_matrix, ind = pDat[,c('Sample_Group', 'age', 'sex')])
lmmatrix(dep = pc_matrix, ind = pDat[,c('Sample_Group', 'age', 'sex')],
         metric = 'Pvalue')
}
